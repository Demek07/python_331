"""
Lesson 52
12.12.2023

Магические методы. Dunder methods.
Dunder - double underscore

__init__ - конструктор класса
Как сравниваются строки
Методы Сравнения
NotImplemented - когда мы не можем сравнить объекты - возвращаем NotImplemented
Как работает сравнение у наследников

    __eq__(self, other):
        Определяет поведение оператора равенства ==.
        Пример: def __eq__(self, other): ...

    __ne__(self, other):
        Определяет поведение оператора неравенства !=.
        Пример: def __ne__(self, other): ...

    __lt__(self, other):
        Определяет поведение оператора "меньше" <.
        Пример: def __lt__(self, other): ...

    __le__(self, other):
        Определяет поведение оператора "меньше или равно" <=.
        Пример: def __le__(self, other): ...

    __gt__(self, other):
        Определяет поведение оператора "больше" >.
        Пример: def __gt__(self, other): ...

    __ge__(self, other):
        Определяет поведение оператора "больше или равно" >=.
        Пример: def __ge__(self, other): ...

    __str__(self):
        Возвращает строковое представление объекта. Используется для пользовательского вывода.

@total_ordering - декоратор, который позволяет определить все методы сравнения
Но нам по прежнему надо описать хоть что-то из методов сравнения


Для использования декоратора functools.total_ordering в Python необходимо определить,
как минимум, два метода: __eq__

и один из методов сравнения (__lt__, __le__, __gt__, или __ge__).
"""
from functools import total_ordering


#TODO Практика!
"""
Опишите класс Город, у которого есть следующие атрибуты:
- название (name)
- население (population)

Импортируйте декоратор total_ordering из модуля functools
Используйте декоратор total_ordering для определения всех методов сравнения, описав
лишь необходимый минимум

Опишите метод __str__ для вывода информации о городе в виде:
"Город: <name>, Население: <population>"

Создайте несколько экземпляров класса Город и сравните их между собой
"""