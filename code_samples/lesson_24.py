"""
Lesson 24
22.11.2023
Повторение основных моментов связанных с Git и Github
Поговорили про:
- переключение между коммитами
- сравнение коммитов
- откат коммитов
- сброс коммитов
- stash и shelve

Ветки:
- создание веток
- переключение между ветками
- слияние веток

"""

# Разбор домашнего задания с декораторами
# Часть 1. Простой декоратор

"""
Декоратор, проверяет аргумент декорируемой функции, коим явяляется строка-пароль по следующим критериям:
   - Длина пароля должна быть не менее 8 символов.
   - Пароль должен содержать хотя бы одну цифру.
   - Пароль должен содержать хотя бы одну заглавную букву.
   - Пароль должен содержать хотя бы одну строчную букву.
   - Пароль должен содержать хотя бы один спецсимвол (например, !, @, #, $ и т.д.).
   
   Если пароль соответствует всем условиям, функция-декоратор должна вызвать оригинальную функцию. 
   В противном случае, вернуть сообщение об ошибке.
   
   **Напишите функцию `register_user`, которая будет принимать пароль в качестве аргумента**. Эта функция будет возвращать сообщение о успешной регистрации, если пароль прошел проверку, и сообщение об ошибке в противном случае.

3. **Используйте декоратор `@password_checker` для функции `register_user`**. При вызове функции `register_user`, декоратор должен автоматически проверить сложность пароля.

"""


def simple_password_ckecker_decorator(func: callable) -> callable:
    def wrapper(password: str) -> str:
        if len(password) < 8:
            raise ValueError('Пароль должен быть не менее 8 символов')
        if not any(map(str.isdigit, password)):
            raise ValueError('Пароль должен содержать хотя бы одну цифру')
        if not any(map(str.isupper, password)):
            raise ValueError('Пароль должен содержать хотя бы одну заглавную букву')
        if not any(map(str.islower, password)):
            raise ValueError('Пароль должен содержать хотя бы одну строчную букву')
        # Проверка на спецсимволы, вхождение в строку '!@#$%^&*()_+-='
        if not any(map(lambda x: x in '!@#$%^&*()_+-=', password)):
            raise ValueError('Пароль должен содержать хотя бы один спецсимвол')
        return func(password)

    return wrapper


@simple_password_ckecker_decorator
def register_user(password: str) -> str:
    return f'Пользователь зарегистрирован с паролем {password}'

