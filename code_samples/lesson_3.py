# Lesson 3

# - Повторение материала
# - Вопросы по ДЗ
# - [PEP-8](https://pythonworld.ru/osnovy/pep-8-rukovodstvo-po-napisaniyu-koda-na-python.html) и
# - [Python Zen](https://ru.wikipedia.org/wiki/%D0%94%D0%B7%D0%B5%D0%BD_%D0%9F%D0%B0%D0%B9%D1%82%D0%BE%D0%BD%D0%B0)
# - Блок-схемы в программировании
# - IF - ELIF - ELSE
# - Разница между IF / ELIF
# - Совмещаем с логическими и операторами и операторами сравнений
# - IF and BOOL - сокращенная запись
# - Строки неизменяемые
# - Обращение по индексу
# - Слайсы
# - Палиндромы
# - Методы строк lower, is_digit

# Zen - это философия языка Python
"""
    Красивое лучше, чем уродливое.
    Явное лучше, чем неявное.
    Простое лучше, чем сложное.
    Сложное лучше, чем запутанное.
    Плоское лучше, чем вложенное.
    Разреженное лучше, чем плотное.
    Читаемость имеет значение.
    Особые случаи не настолько особые, чтобы нарушать правила.
    При этом практичность важнее безупречности.
    Ошибки никогда не должны замалчиваться.
    Если они не замалчиваются явно.
    Встретив двусмысленность, отбрось искушение угадать.
    Должен существовать один и, желательно, только один очевидный способ сделать это.
    Хотя он поначалу может быть и не очевиден, если вы не голландец.
    Сейчас лучше, чем никогда.
    Хотя никогда зачастую лучше, чем прямо сейчас.
    Если реализацию сложно объяснить — идея плоха.
    Если реализацию легко объяснить — идея, возможно, хороша.
    Пространства имён — отличная штука! Будем делать их больше!
"""

# PEP-8 - это руководство по написанию кода на языке Python
# PEP - Python Enhancement Proposal - предложение по улучшению Python
name = 'Зинаида'  # Длинный комментарий - используется тройные кавычки - это строка - стоит в памяти программы и занимает место

# Блок-схемы в программировании
# https://products.aspose.app/diagram/ru/flowchart
# https://pro-prof.com/archives/1462

# TODO Практическое задание
"""
1. Зайдите на сайт редактора блок-схем
2. Опишите алгоритм работы в блок-схеме следующей программы:

Личный погодный ассистент
1. Наличие осадков
2. Если есть осадки, то:
    Взять зонт
Если нет осадков, то:
Желает хорошего дня

"""
# .upper() - преобразование строки в верхний регистр
# user_input = input('Скажите ДА или НЕТ: ')

# if user_input.upper() == 'ДА':
#     print('Вы сказали ДА')
#     print("Похоже что вы согласны")
#
# if user_input.upper() == 'НЕТ':
#     print('Вы сказали НЕТ')
#     print("Похоже что вы не согласны")
#
# else:
#     print('Похоже, что вы не поняли вопроса')
#

# TODO Практическое задание
"""
1. Программа спрашивает наличие осадков
2. Если есть осадки, то: Взять зонт
 Если нет осадков, то: Желает хорошего дня
"""

# Составное условие с логическими операторами

num_1 = 10
num_2 = 2

# if num_1 > 0 and num_2 > 0:
#     print('Оба числа больше нуля')
# else:
#     print('Числа не больше нуля')

# Вложенные условия

num_1 = -1
num_2 = 2

# if num_1 > 0:
#     if num_2 > 0:
#         print('Оба числа больше нуля')
#     else:
#         print('Число 2 меньше нуля')
# else:
#     print('Оба числа меньше нуля') # Ошибочно - не оба числа меньше нуля (только одно)
#

# Плоская структура проверки условий
num_1 = 4
num_2 = 5
num_3 = 3

if num_1 > 0:
    print(f'Число {num_1} больше нуля')
else:
    print(f'Число {num_1} меньше нуля')

if num_2 > 0:
    print('Число 2 больше нуля')
if num_3 > 0:
    print('Число 3 больше нуля')

# elif - else if - иначе если
# Меню. Категория продукта

# category = input('Введите категорию продукта\n(рыба / мясо / птица): ')
#
# if category == 'мясо':
#     print('Вы выбрали мясо')
# elif category == 'рыба':
#     print('Вы выбрали рыбу')
# elif category == 'птица':
#     print('Вы выбрали птицу')

# Строки. Индекс
string_1 = 'Привет, мир!'
print(string_1[0])  # Первый символ
print(string_1[8])  # м
print(string_1[-1])  # Последний символ с конца

# Строки - неизменяемые, последовательности символов.
# Строки - упорядоченная коллекция неизменяемых элементов

# string_1[0] = 'Т'  # TypeError - строка неизменяемая

name = 'Евклидия'
if name[0] == 'Е':
    print('Первая буква имени Е')

else:
    print('Первая буква имени не Е')

# Срезы - slices - [start:stop:step]
long_string = 'Это очень длинная строка'

print(long_string[::])  # Это полностью строка
print(long_string[0:4])  # По 4 не включительно
print(long_string[::2])  # Через один символ
print(long_string[::-1])  # Разворот строки
